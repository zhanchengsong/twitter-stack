version: '3.1'

services:
  twitter-web:
    image: zhanchengdev/twitter-web:latest
    restart: always
    environment:
      AWS_ACCESS_KEY_ID: ${NODE_AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${NODE_AWS_SECRET_ACCESS_KEY}
      AWS_REGION: ${AWS_REGION}
      AWS_USER_ICON_BUCKET: ${AWS_USER_ICON_BUCKET}
      PORT: ${NODE_PORT}
      ENV_TYPE : docker
    ports:
      - ${NODE_PORT}:${NODE_PORT}
    depends_on:
      - userservice
    
  userservice:
    image: zhanchengdev/userservice:latest
    restart: always
    ports: 
      - 3005:3005
    depends_on:
      - pgdb
    environment:
      PG_USERNAME: postgres
      PG_PASSWORD: ${PG_PASSWORD}
      PG_DBNAME: ${PG_DBNAME}
      DB_TYPE: postgres
      DB_HOST: pgdb
      DB_PORT: 5432
      JWT_SECRET: ${JWT_SECRET}
      AWS_ACCESS_KEY_ID: ${GO_AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${GO_AWS_SECRET_ACCESS_KEY}
      AWS_REGION: ${AWS_REGION}
      AWS_USER_ICON_BUCKET: ${AWS_USER_ICON_BUCKET}
      SERVER_PORT: 3005

  pgdb:
    image: postgres
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_DB: ${PG_DBNAME}
    volumes:
      - db-data:/var/lib/postgresql/data

  nginx:
    image: nginx 
    volumes:
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 80:80
    environment:
      - NGINX_HOST=test-twitter.com
      - NGINX_PORT=80
    depends_on:
      - userservice
  
  mongo-db:
    image: 'mongo'
    restart: always
    container_name: 'twitter-mongo'
    environment: 
      - MONGO_INITDB_DATABASE=${MONGO_DBNAME}
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ADMIN_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ADMIN_PASSWORD}
    ports:
      - '27017-27019:27017-27019'
    volumes:
      - ./config/mongo/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - mongo-data:/data/db
  redis:
    image: redis
    ports:
      - 6379:6379
volumes:
    redis-data:
    db-data:
    mongo-data: